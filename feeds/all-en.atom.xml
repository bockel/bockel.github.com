<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>/usr/share</title><link href="bockel.github.com/" rel="alternate"></link><link href="bockel.github.com/feeds/all-en.atom.xml" rel="self"></link><id>bockel.github.com/</id><updated>2012-09-24T17:47:00-04:00</updated><entry><title>Gnome3 Screencasting</title><link href="bockel.github.com/random/gnome3-screencasting.html" rel="alternate"></link><updated>2012-09-24T17:47:00-04:00</updated><author><name>William Heinbockel</name></author><id>tag:bockel.github.com,2012-09-24:random/gnome3-screencasting.html</id><summary type="html">&lt;p&gt;Continuing on a little mini-series of slide- and screen-casting notes (post &lt;a class="reference external" href="http://bockel.github.com/random/converting-presentation-to-video.html"&gt;1&lt;/a&gt;, &lt;a class="reference external" href="http://bockel.github.com/random/slidecasting-v2.html"&gt;2&lt;/a&gt;) here is an overview
of the screencast recorder built into&amp;nbsp;&lt;span class="caps"&gt;GNOME3&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;Normally, you can just hit &lt;tt class="docutils literal"&gt;ctrl+alt+shift+r&lt;/tt&gt; in &lt;span class="caps"&gt;GNOME&lt;/span&gt; and it will start
recording the screen as a &lt;a class="reference external" href="http://www.webmproject.org/"&gt;webm&lt;/a&gt; video. To stop, hit &lt;tt class="docutils literal"&gt;ctrl+alt+shift+r&lt;/tt&gt; again.&lt;/p&gt;
&lt;p&gt;Under the hood, record uses gstreamer. The webm support is part of the
gstreamer &lt;a class="reference external" href="http://gstreamer.freedesktop.org/data/doc/gstreamer/head/gst-plugins-bad-plugins/html/gst-plugins-bad-plugins-vp8enc.html"&gt;vp8enc&lt;/a&gt; package. To use this Fedora, you must first install the
&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;gstreamer-plugins-bad&lt;/span&gt;&lt;/tt&gt; package, which is available through &lt;a class="reference external" href="http://rpmfusion.org/"&gt;RPMFusion&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Note that do to the way the screencast pipelines are configured, new recordings
will be appended to the end of the first recording. The easiest way I&amp;#8217;ve found
to stop this is to reset gnome-shell (&lt;tt class="docutils literal"&gt;alt+F2&lt;/tt&gt;, &lt;tt class="docutils literal"&gt;r&lt;/tt&gt;,&amp;nbsp;enter).&lt;/p&gt;
&lt;div class="section" id="configure-gnome-shell-recorder"&gt;
&lt;h2&gt;Configure &lt;span class="caps"&gt;GNOME&lt;/span&gt; Shell&amp;nbsp;Recorder&lt;/h2&gt;
&lt;p&gt;By default, &lt;span class="caps"&gt;GNOME&lt;/span&gt; Record does not record audio. To enable it, you must change
the recorder pipeline. This can be done via the command line or through
&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;dconf-editor&lt;/span&gt;&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;To configure the &lt;span class="caps"&gt;GNOME&lt;/span&gt; Shell Recorder to record the audio via pulse (for a list
of other gstreamer sources &lt;span class="amp"&gt;&amp;amp;&lt;/span&gt; sinks, see the output of &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;gst-inspect&lt;/span&gt;&lt;/tt&gt;):&lt;/p&gt;
&lt;pre class="code bash literal-block"&gt;
gsettings &lt;span class="nb"&gt;set &lt;/span&gt;org.gnome.shell.recorder pipeline &lt;span class="s2"&gt;&amp;quot;queue ! videorate !
  vp8enc quality=8 speed=4 threads=%T ! mux. pulsesrc ! audio/x-raw-int
  ! audioconvert ! vorbisenc ! mux. webmmux name=mux&amp;quot;&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;Since the default &lt;a class="reference external" href="http://www.webmproject.org/"&gt;webm&lt;/a&gt; format requires additional gstreamer plugins, you may
prefer to use the Ogg Theora (ogv) video format instead, which is supported in
the base gstreamer package). To do this and use &lt;em&gt;video/x-theora&lt;/em&gt; with
&lt;em&gt;audio/x-vorbis&lt;/em&gt;:&lt;/p&gt;
&lt;pre class="code bash literal-block"&gt;
gsettings &lt;span class="nb"&gt;set &lt;/span&gt;org.gnome.shell.recorder file-extension &lt;span class="s2"&gt;&amp;quot;ogv&amp;quot;&lt;/span&gt;
gsettings &lt;span class="nb"&gt;set &lt;/span&gt;org.gnome.shell.recorder pipeline &lt;span class="s2"&gt;&amp;quot;queue ! videorate
  ! theoraenc ! mux. pulsesrc ! audio/x-raw-int ! audioconvert
  ! vorbisenc quality=0 ! mux. oggmux&amp;quot;&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;For higher or lower quality video and audio, check the &lt;a class="reference external" href="http://gstreamer.freedesktop.org/data/doc/gstreamer/head/gst-plugins-base-plugins/html/gst-plugins-base-plugins-theoraenc.html"&gt;theoraenc&lt;/a&gt; and
&lt;a class="reference external" href="http://gstreamer.freedesktop.org/data/doc/gstreamer/head/gst-plugins-base-plugins/html/gst-plugins-base-plugins-vorbisenc.html"&gt;vorbisenc&lt;/a&gt; gstreamer plugins&amp;nbsp;pages.&lt;/p&gt;
&lt;p&gt;To change the framerate, to say 15 frames per&amp;nbsp;second:&lt;/p&gt;
&lt;pre class="code bash literal-block"&gt;
gsettings &lt;span class="nb"&gt;set &lt;/span&gt;org.gnome.shell.recorder framerate 15
&lt;/pre&gt;
&lt;p&gt;To reset the &lt;span class="caps"&gt;GNOME&lt;/span&gt; recorder to its defaults,&amp;nbsp;run:&lt;/p&gt;
&lt;pre class="code bash literal-block"&gt;
gsettings reset-recursively org.gnome.shell.recorder
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="capture-system-audio"&gt;
&lt;h2&gt;Capture System&amp;nbsp;Audio&lt;/h2&gt;
&lt;p&gt;To enable the recording the audio from an application (e.g., firefox,
rhythmbox, impress), we have to change the recording source from the line-in to
a monitor. To do this, open the &amp;#8220;Pulse Audio Volume Control&amp;#8221; (&lt;cite&gt;pavucontrol&lt;/cite&gt;)
and go to the recording&amp;nbsp;tab.&lt;/p&gt;
&lt;p&gt;Make sure &amp;#8220;Application&amp;#8221; is selected in the lower right. Now start the recording
application (&lt;tt class="docutils literal"&gt;ctrl+alt+shift+r&lt;/tt&gt;) to make it appear. It doesn&amp;#8217;t matter what
you are&amp;nbsp;recording.&lt;/p&gt;
&lt;/div&gt;
</summary><category term="training"></category><category term="presentation"></category><category term="video"></category></entry><entry><title>Slidecasting v2</title><link href="bockel.github.com/random/slidecasting-v2.html" rel="alternate"></link><updated>2012-09-19T15:35:00-04:00</updated><author><name>William Heinbockel</name></author><id>tag:bockel.github.com,2012-09-19:random/slidecasting-v2.html</id><summary type="html">&lt;p&gt;The problem with my previous attempt to slidecast a movie, &lt;a class="reference external" href="http://bockel.github.com/random/converting-presentation-to-video.html"&gt;pdf2ogv&lt;/a&gt;, from
OpenOffice Impress was the lack of&amp;nbsp;flexibility.&lt;/p&gt;
&lt;p&gt;If you just have a set of pictures or simple slides, that approach is simple
and straightforward. But what if we want to add some animations and be able to
draw the audiences attention to something. In those cases, generating a new
slide for each animation effect is&amp;nbsp;overkill.&lt;/p&gt;
&lt;p&gt;I want an approach that can leverage the built-in features of OpenOffice (and
happens to be extensible to any&amp;nbsp;screencast).&lt;/p&gt;
&lt;p&gt;To start, we have the exact same setup as in &lt;a class="reference external" href="http://bockel.github.com/random/converting-presentation-to-video.html"&gt;pdf2ogv&lt;/a&gt;:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;An OpenDocument Presentation (.odp) file from&amp;nbsp;LibreOffice&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://audacity.sourceforge.net/"&gt;audacity&lt;/a&gt; project file (.aup) with audio recorded as one track per&amp;nbsp;slide&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="section" id="instructions"&gt;
&lt;h2&gt;&lt;span class="caps"&gt;INSTRUCTIONS&lt;/span&gt;&lt;/h2&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Setup the initial slide presentation in LibreOffice or&amp;nbsp;OpenOffice.&lt;/li&gt;
&lt;li&gt;Record (or open) the presentation audio track in &lt;a class="reference external" href="http://audacity.sourceforge.net/"&gt;audacity&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;Ensure each slide is on a different track and that the tracks are ordered&amp;nbsp;sequentially&lt;/li&gt;
&lt;li&gt;Export the recorded audio as a single .wav&amp;nbsp;file&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Run the following &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;parse-aup&lt;/span&gt;&lt;/tt&gt; (&lt;a class="reference external" href="https://gist.github.com/3752191"&gt;gist&lt;/a&gt;)
code on the &lt;tt class="docutils literal"&gt;audacity&lt;/tt&gt; .aup project file to output the slide times for
each&amp;nbsp;track&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class="code bash literal-block" id="parse-aup"&gt;
&lt;span class="c"&gt;#!/bin/sh
&lt;/span&gt;
&lt;span class="c"&gt;# Convert a &lt;span class="caps"&gt;PDF&lt;/span&gt; slide presentation and audio track into an &lt;span class="caps"&gt;OGV&lt;/span&gt; video
# Copyright (C) 2012  William Heinbockel &amp;lt;heinbockel&amp;#64;redhat.com&amp;gt;
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the &lt;span class="caps"&gt;GNU&lt;/span&gt; General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but &lt;span class="caps"&gt;WITHOUT&lt;/span&gt; &lt;span class="caps"&gt;ANY&lt;/span&gt; &lt;span class="caps"&gt;WARRANTY&lt;/span&gt;; without even the implied warranty of
# &lt;span class="caps"&gt;MERCHANTABILITY&lt;/span&gt; or &lt;span class="caps"&gt;FITNESS&lt;/span&gt; &lt;span class="caps"&gt;FOR&lt;/span&gt; A &lt;span class="caps"&gt;PARTICULAR&lt;/span&gt; &lt;span class="caps"&gt;PURPOSE&lt;/span&gt;.  See the
# &lt;span class="caps"&gt;GNU&lt;/span&gt; General Public License for more details.
#
# You should have received a copy of the &lt;span class="caps"&gt;GNU&lt;/span&gt; General Public License
# along with this program.  If not, see &amp;lt;http://www.gnu.org/licenses/&amp;gt;.
&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; &lt;span class="nv"&gt;$# &lt;/span&gt;-ne 1 &lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="k"&gt;then &lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Usage: $0 audacity.aup&amp;quot;&lt;/span&gt;
   &lt;span class="nb"&gt;exit &lt;/span&gt;1
&lt;span class="k"&gt;fi

if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; ! -r &lt;span class="s2"&gt;&amp;quot;$1&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="k"&gt;then &lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Error: cannot find audacity file: $1&amp;quot;&lt;/span&gt;
   &lt;span class="nb"&gt;exit &lt;/span&gt;1
&lt;span class="k"&gt;fi&lt;/span&gt;

&lt;span class="c"&gt;# Get track lengths
&lt;/span&gt;cat &lt;span class="s"&gt;&amp;lt;&amp;lt;- &lt;span class="caps"&gt;EOF&lt;/span&gt; | xsltproc --novalid --nonet - &amp;quot;$1&amp;quot;
&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;&lt;span class="caps"&gt;UTF&lt;/span&gt;-8&amp;quot;?&amp;gt;
&amp;lt;xsl:stylesheet version=&amp;quot;1.0&amp;quot;
   xmlns:xsl=&amp;quot;http://www.w3.org/1999/&lt;span class="caps"&gt;XSL&lt;/span&gt;/Transform&amp;quot;
   xmlns:a=&amp;quot;http://audacity.sourceforge.net/xml/&amp;quot;&amp;gt;
   &amp;lt;xsl:output method=&amp;quot;text&amp;quot;/&amp;gt;
   &amp;lt;xsl:variable name=&amp;quot;rate&amp;quot; select=&amp;quot;/a:project/&amp;#64;rate&amp;quot;/&amp;gt;
   &amp;lt;xsl:template match=&amp;quot;/a:project&amp;quot;&amp;gt;
       &amp;lt;xsl:for-each select=&amp;quot;a:wavetrack&amp;quot;&amp;gt;
           &amp;lt;xsl:value-of select=&amp;quot;concat('Slide ',position(),': ',round(sum(a:waveclip/a:sequence/&amp;#64;numsamples) div \$rate),'s')&amp;quot;/&amp;gt;
           &amp;lt;xsl:text&amp;gt;
&amp;lt;/xsl:text&amp;gt;
       &amp;lt;/xsl:for-each&amp;gt;
   &amp;lt;/xsl:template&amp;gt;
   &amp;lt;xsl:template match=&amp;quot;text()&amp;quot;/&amp;gt;
&amp;lt;/xsl:stylesheet&amp;gt;
&lt;span class="caps"&gt;EOF&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;
&lt;ol class="arabic" start="4"&gt;
&lt;li&gt;&lt;p class="first"&gt;Open the .odp presentation&amp;nbsp;file&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Select the first slide. Then go to the top menu and select &lt;em&gt;Slideshow &amp;gt;
Slide Transition&amp;#8230;&lt;/em&gt;. Under the &lt;em&gt;Modify Transition&lt;/em&gt; section, select the
value for the Speed (recommend &lt;strong&gt;Medium&lt;/strong&gt;), then choose the Sound drop down.
In the file chooser panel, select the .wav file you exported from Step&amp;nbsp;2.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Go to menu and select &lt;em&gt;Slideshow &amp;gt; Slide Transition&amp;#8230;&lt;/em&gt;. Fill out the
&lt;em&gt;Advance Slide &amp;gt; Automatically After&lt;/em&gt; value with the slide timings (Step 3)
for each&amp;nbsp;slide&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Use &lt;tt class="docutils literal"&gt;audacity&lt;/tt&gt; and the audio file to play and sync the custom animations
on each slide with the&amp;nbsp;narrative.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span class="caps"&gt;BEWARE&lt;/span&gt;&lt;/strong&gt;: The slide transition timings set in the previous step do not
start until the last animation finishes! If you have animations, you will
have to adjust the times&amp;nbsp;accordingly!&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Capture the timed slide show using a screen capture&amp;nbsp;software&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;It is recommended that you scale your screen size down to 800x600 before&amp;nbsp;recording&lt;/li&gt;
&lt;li&gt;If you are using Gnome3, just start the presentation and immediately press
&lt;tt class="docutils literal"&gt;ctrl + alt + shift + r&lt;/tt&gt;, wait for the slide show to finish, and press
the key combo once more to stop recording. This produces a
&lt;em&gt;Screencast-&amp;#8230;.webm&lt;/em&gt; file in your &lt;tt class="docutils literal"&gt;$&lt;span class="caps"&gt;HOME&lt;/span&gt;&lt;/tt&gt; directory. (Note: this will
not capture the&amp;nbsp;audio)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Combine the audio and video container. I prefer to use
&lt;tt class="docutils literal"&gt;ffmpeg&lt;/tt&gt;. (The &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;Screencasting_fedora-av-splice.sh&lt;/span&gt;&lt;/tt&gt; script available
&lt;a class="reference external" href="http://fedoraproject.org/wiki/ScreenCasting"&gt;here&lt;/a&gt; should work as&amp;nbsp;well.)&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;To keep the .webm&amp;nbsp;format:&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class="code bash literal-block"&gt;
ffmpeg -i &lt;span class="s2"&gt;&amp;quot;Screencast.webm&amp;quot;&lt;/span&gt; -i &lt;span class="s2"&gt;&amp;quot;audio.wav&amp;quot;&lt;/span&gt; -map 0:0 -map 1:0 &lt;span class="se"&gt;\
&lt;/span&gt;    -filter:a earwax -ar 32000 -c:a libvorbis -c:v copy &lt;span class="s2"&gt;&amp;quot;output.webm&amp;quot;&lt;/span&gt;
&lt;/pre&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;To record the .webm into an Ogg .ogv&amp;nbsp;container:&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class="code bash literal-block"&gt;
ffmpeg -i &lt;span class="s2"&gt;&amp;quot;Screencast.webm&amp;quot;&lt;/span&gt; -i &lt;span class="s2"&gt;&amp;quot;audio.wav&amp;quot;&lt;/span&gt; -map 0:0 -map 1:0 &lt;span class="se"&gt;\
&lt;/span&gt;    -filter:a earwax -ac 2 -ar 32000 -c:a libspeex -c:v libtheora -r 10 &lt;span class="s2"&gt;&amp;quot;output.ogv&amp;quot;&lt;/span&gt;
&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class="section" id="slide-timing-tips"&gt;
&lt;h2&gt;&lt;span class="caps"&gt;SLIDE&lt;/span&gt; &lt;span class="caps"&gt;TIMING&lt;/span&gt;&amp;nbsp;&lt;span class="caps"&gt;TIPS&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;It bears&amp;nbsp;repeating:&lt;/p&gt;
&lt;blockquote&gt;
The automatic slide transition timings do not start on a slide until all of
the custom animation effects have finished.&lt;/blockquote&gt;
&lt;p&gt;To that end, here are some tips to help figure out the proper&amp;nbsp;timings.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;Use the timings from &lt;a class="reference internal" href="#parse-aup"&gt;parse-aup&lt;/a&gt; as the master list of slide&amp;nbsp;times&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Prefer effects to be timed to start &lt;em&gt;With previous&lt;/em&gt; as this makes it easier
to determine and adjust&amp;nbsp;timings&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;When dealing with lists of text, add each row as a new effect. Avoid using
the &lt;em&gt;Text Animation&lt;/em&gt; effect options as these effects to not seem to properly
finish and transition to the next text. Due to these effects not finishing,
the slide timer will never&amp;nbsp;start.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;When timing custom&amp;nbsp;animations:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;Open the audio in audacity and go to the track for the&amp;nbsp;slide&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Find the point in the audio where you want the effect to&amp;nbsp;start&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Use the audacity selection tool to figure out how far into the track you
need to wait. Audacity gives timings in second increments and OpenOffice
allows for half-second precision, so give it your best&amp;nbsp;guess&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Add the effect as&amp;nbsp;normal&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Right click on the effect and select &lt;em&gt;Timing&amp;#8230;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;For &lt;strong&gt;Start&lt;/strong&gt;, choose &lt;em&gt;With previous&lt;/em&gt;. This will start the delay count down
when the slide transition&amp;nbsp;occurs&lt;/p&gt;
&lt;p&gt;For &lt;strong&gt;Delay&lt;/strong&gt;, enter in the time we got from&amp;nbsp;audacity&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Go to the &lt;em&gt;Slide Transition&lt;/em&gt; menu for the slide. Subtract the &lt;strong&gt;delay&lt;/strong&gt;
time from the overall &lt;em&gt;Advance Slide &amp;gt; Automatically After&lt;/em&gt;&amp;nbsp;time&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary><category term="training"></category><category term="presentation"></category><category term="video"></category></entry><entry><title>Converting Presentation to Video</title><link href="bockel.github.com/random/converting-presentation-to-video.html" rel="alternate"></link><updated>2012-08-22T17:20:00-04:00</updated><author><name>William Heinbockel</name></author><id>tag:bockel.github.com,2012-08-22:random/converting-presentation-to-video.html</id><summary type="html">&lt;p&gt;As part of my job, I develop training courses to help teach developers about
software security. This results in lots of tips, articles, and slide decks.
While articles and tips are standalone, slides require further explaination.
Slides should never be made to be independent; otherwise, you end up with
walls of text and glazed-over, uninterested&amp;nbsp;audiences.&lt;/p&gt;
&lt;p&gt;To make the slide content standalone, it needs to be combined with an audio
voiceover track. Producing the slides and the audio presentation are
straightforward, but combining them into a video was anything&amp;nbsp;but.&lt;/p&gt;
&lt;p&gt;Searching through the interwebs and forums yielded little promise. Most
solutions were either commercial products, were missing essential features, or
would require a lot of customization. Screencasting was not a solution as it
would require me to play the audio and manually traverse the&amp;nbsp;slides.&lt;/p&gt;
&lt;p&gt;Each presentation&amp;nbsp;contains:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;An OpenDocument Presentation (.odp) file from&amp;nbsp;LibreOffice&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://audacity.sourceforge.net/"&gt;audacity&lt;/a&gt; project file (.aup) with audio recorded as one track per&amp;nbsp;slide&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Here is my solution, &lt;tt class="docutils literal"&gt;pdf2ogv&lt;/tt&gt;&amp;#8212;a program that combines a &lt;span class="caps"&gt;PDF&lt;/span&gt; slide deck
with an audio track to produce an Ogg &lt;span class="caps"&gt;OGV&lt;/span&gt; video container with &lt;a class="reference external" href="http://speex.org/"&gt;speex&lt;/a&gt;-encoded&amp;nbsp;audio.&lt;/p&gt;
&lt;div class="section" id="instructions"&gt;
&lt;h2&gt;&lt;span class="caps"&gt;INSTRUCTIONS&lt;/span&gt;&lt;/h2&gt;
&lt;ol class="arabic"&gt;
&lt;li&gt;&lt;p class="first"&gt;Create (or open) a presentation slide deck. Save the deck as &lt;span class="caps"&gt;PDF&lt;/span&gt; with one
slide per&amp;nbsp;page&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;For OpenDocument (.odp) or Microsoft PowerPoint presentations, this can be
done via &lt;em&gt;File &amp;gt; Save As&lt;/em&gt; or &lt;em&gt;File &amp;gt;&amp;nbsp;Export&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;For &lt;span class="caps"&gt;HTML&lt;/span&gt; presentations, you can use something like &lt;a class="reference external" href="http://phantomjs.org/"&gt;phantomjs&lt;/a&gt; to automatically capture each slide as an&amp;nbsp;image&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Record (or open) the presentation audio track in &lt;tt class="docutils literal"&gt;audacity&lt;/tt&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;The audio for each slide is on a different track and that the tracks to
not&amp;nbsp;overlap&lt;/li&gt;
&lt;li&gt;Sync-Lock the tracks ( &lt;em&gt;Tracks &amp;gt; Sync-Lock Tracks&lt;/em&gt;&amp;nbsp;)&lt;/li&gt;
&lt;li&gt;Add 1+ seconds of lead-in time (either as silence or music) to the first&amp;nbsp;track&lt;/li&gt;
&lt;li&gt;Add 1+ seconds of lead-out time to the final&amp;nbsp;track&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Save the recording as an &lt;tt class="docutils literal"&gt;audacity&lt;/tt&gt; project&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Export the audio to a single &lt;tt class="docutils literal"&gt;wav&lt;/tt&gt; file ( &lt;em&gt;File &amp;gt; Export&amp;#8230;&lt;/em&gt; ) (This step
is necessary as there is no easy way to convert the audacity .au files into
a single&amp;nbsp;wav)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Run &lt;tt class="docutils literal"&gt;pdf2ogv&lt;/tt&gt; as&amp;nbsp;follows:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
pdf2ogv slides.pdf audacity-project.aup slide-audio.wav
&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class="section" id="dependencies"&gt;
&lt;h2&gt;&lt;span class="caps"&gt;DEPENDENCIES&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;pdf2ogv&lt;/tt&gt; requires &lt;a class="reference external" href="http://audacity.sourceforge.net/"&gt;audacity&lt;/a&gt;, &lt;a class="reference external" href="http://sox.sourceforge.net/"&gt;SoX&lt;/a&gt;, &lt;a class="reference external" href="http://www.imagemagick.org/script/index.php"&gt;ImageMagick&lt;/a&gt;, &lt;a class="reference external" href="http://ffmpeg.org/"&gt;ffmpeg&lt;/a&gt;, &lt;a class="reference external" href="http://xmlsoft.org/XSLT/"&gt;libxslt&lt;/a&gt;, and &lt;a class="reference external" href="http://dvd-slideshow.sourceforge.net/wiki/Main_Page"&gt;dvd-slideshow&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Download &lt;a class="reference external" href="http://dvd-slideshow.sourceforge.net/wiki/Main_Page"&gt;dvd-slideshow&lt;/a&gt; and either install it (&lt;tt class="docutils literal"&gt;./install.sh&lt;/tt&gt;) or at least
make the &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;dvd-slideshow&lt;/span&gt;&lt;/tt&gt; command accessible in &lt;tt class="docutils literal"&gt;$&lt;span class="caps"&gt;PATH&lt;/span&gt;&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;ffmpeg&lt;/tt&gt; is available through &lt;a class="reference external" href="http://rpmfusion.org"&gt;RPMFusion&lt;/a&gt;:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
sudo rpm -ivh http://download1.rpmfusion.org/free/fedora/rpmfusion-free-release-stable.noarch.rpm
sudo yum update
sudo yum install ffmpeg
&lt;/pre&gt;
&lt;p&gt;The remaining files are available from the Fedora repository via &lt;tt class="docutils literal"&gt;yum&lt;/tt&gt;:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
sudo yum install -y sox audacity libxslt imagemagick
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="pdf2ogv"&gt;
&lt;h2&gt;pdf2ogv&lt;/h2&gt;
&lt;p&gt;The &lt;tt class="docutils literal"&gt;pdf2ogv&lt;/tt&gt; code is made available under the &lt;a class="reference external" href="http://www.gnu.org/licenses/gpl.html"&gt;GPLv3 license&lt;/a&gt;
and is available as a &lt;a class="reference external" href="https://gist.github.com/3426432"&gt;gist&lt;/a&gt;.&lt;/p&gt;
&lt;script src="https://gist.github.com/3426432.js?file=pdf2ogv.sh"&gt;&lt;/script&gt;&lt;/div&gt;
</summary><category term="training"></category><category term="presentation"></category><category term="video"></category></entry></feed>